services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lms_network

  redis:
    image: redis:latest
    networks:
      - DRF_network

  celery:
    build: .
    command: poetry run celery -A config worker -l INFO -P eventlet
    volumes:
      - .:/DRF
    depends_on:
      - postgres
      - redis
    networks:
      - DRF_network

  celery-beat:
    build: .
    command: poetry run celery -A config beat -l INFO
    volumes:
      - .:/DRF
    depends_on:
      - postgres
      - redis
    networks:
      - DRF_network

  lms_drf:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "poetry run python manage.py collectstatic --noinput && poetry run gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/DRF
      - static_volume:/DRF/staticfiles
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DATABASE_URL=postgres://${USER}:${PASSWORD}@postgres:${PORT}/${NAME}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - DRF_network

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/nginx/staticfiles
    depends_on:
      - DRF
    networks:
      - DRF_network

networks:
  DRF_network:

volumes:
  postgres_data:
  static_volume: